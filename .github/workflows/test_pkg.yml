name: Test Package

on: [ push ]

jobs:
  build_1:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019]
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]

    env: 
      SAMNTDIR: ${{ github.workspace }}/../SAM
      NREL_API_KEY: ${{ secrets.NREL_API_KEY }}
      NREL_API_EMAIL: ${{ secrets.NREL_API_EMAIL }}

    name: ${{ matrix.os }} ${{ matrix.python-version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - run: which python

      - name: Get PySAM Version Unix
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          VER=$(python -c "from files.version import __version__; print(__version__)")
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: Get PySAM Version Windows
        if: ${{ matrix.os == 'windows-latest'}}
        run: |
          $VER=$(python -c "from files.version import __version__; print(__version__)")
          echo "VERSION=$VER" >> $env:GITHUB_ENV

      - name: Install NREL-PySAM
        run: |
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pip install nrel-pysam==${{ env.VERSION }}

      - uses: actions/checkout@v3
      - name: Checkout SAM
        run: |
          cd ..
          git config --global url.https://github.com/.insteadOf git://github.com/
          git clone https://github.com/NREL/SAM.git

      - name: Unit tests
        run: |
          pytest tests/test_pysam_all.py
    
  build_2: 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14]
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]

    env: 
      SAMNTDIR: ${{ github.workspace }}/../SAM
      NREL_API_KEY: ${{ secrets.NREL_API_KEY }}
      NREL_API_EMAIL: ${{ secrets.NREL_API_EMAIL }}

    name: ${{ matrix.os }} ${{ matrix.python-version }}
    steps:
      - name: Install conda Mac arm64
        run: |
          mkdir -p ~/miniconda3
          curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh -o ~/miniconda3/miniconda.sh
          bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
          rm -rf ~/miniconda3/miniconda.sh
          ~/miniconda3/bin/conda init bash
          source /Users/runner/.bash_profile
          conda --version
          yes | conda create --name pysam_env python=${{ matrix.python-version }}
          conda activate pysam_env
          which python

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install NREL-PySAM
        run: |
          source /Users/runner/.bash_profile
          conda activate pysam_env
          VER=$(python -c "from files.version import __version__; print(__version__)")
          echo $VER
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pip install nrel-pysam==$VER
      
      - uses: actions/checkout@v3
      - name: Checkout SAM
        run: |
          cd ..
          git config --global url.https://github.com/.insteadOf git://github.com/
          git clone https://github.com/NREL/SAM.git

      - name: Unit tests
        run: |
          source /Users/runner/.bash_profile
          conda activate pysam_env
          pytest tests

  build_3: 
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14-large]
        python-version: [ '3.8', '3.9', '3.10', '3.11', '3.12' ]

    env: 
      SAMNTDIR: ${{ github.workspace }}/../SAM
      NREL_API_KEY: ${{ secrets.NREL_API_KEY }}
      NREL_API_EMAIL: ${{ secrets.NREL_API_EMAIL }}

    name: ${{ matrix.os }} ${{ matrix.python-version }}
    steps:
      - name: Install conda Mac Intel
        run: |
          mkdir -p ~/miniconda3
          curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -o ~/miniconda3/miniconda.sh
          bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
          rm -rf ~/miniconda3/miniconda.sh
          ~/miniconda3/bin/conda init bash
          source /Users/runner/.bash_profile
          conda --version
          yes | conda create --name pysam_env python=${{ matrix.python-version }}
          conda activate pysam_env
          which python

      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install NREL-PySAM
        run: |
          source /Users/runner/.bash_profile
          conda activate pysam_env
          VER=$(python -c "from files.version import __version__; print(__version__)")
          echo $VER
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pip install nrel-pysam==$VER
      
      - uses: actions/checkout@v3
      - name: Checkout SAM
        run: |
          cd ..
          git config --global url.https://github.com/.insteadOf git://github.com/
          git clone https://github.com/NREL/SAM.git

      - name: Unit tests
        run: |
          source /Users/runner/.bash_profile
          conda activate pysam_env
          pytest tests
